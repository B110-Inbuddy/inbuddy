services:
  dev-be:
    container_name: dev-springboot
    image: dev-be
    build:
      context: ${DEV_BE_CONTEXT_PATH}
      dockerfile: ${DEV_METADATA}/be/Dockerfile
    ports:
      - "8081:8080"
    volumes:
      - ${DEV_BE_CONTEXT_PATH}:/app
    networks:
      - dev-network
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - mysql
      - redis

  dev-fe:
    container_name: dev-react
    image: dev-fe
    build:
      context: ${DEV_FE_CONTEXT_PATH}
      dockerfile: ${DEV_METADATA}/fe/Dockerfile
    ports:
      - "5174:5173"
    volumes:
      - ${DEV_FE_CONTEXT_PATH}:/app
    environment:
      - TZ=Asia/Seoul
    networks:
      - dev-network

  dev-scheduler:
    container_name: dev-scheduler
    image: dev-scheduler
    build:
      context: ${DEV_SCHEDULER_CONTEXT_PATH}
      dockerfile: ${DEV_METADATA}/scheduler/Dockerfile
    ports:
      - "8001:8000"
    volumes:
      - ${DEV_SCHEDULER_CONTEXT_PATH}:/app
    networks:
      - dev-network
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - mysql
      - redis

  mysql:
    container_name: dev-mysql
    image: mysql:latest
    volumes:
      - mysql-dev-volume:/var/lib/mysql
      - ./be/init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Seoul
    networks:
      - dev-network
    restart: unless-stopped
    
  redis:
    container_name: dev-redis
    image: redis:latest
    volumes:
      - redis-dev-volume:/data
    environment:
      - TZ=Asia/Seoul
    networks:
      - dev-network
    restart: unless-stopped

volumes:
  mysql-dev-volume:
  redis-dev-volume:


networks:
  dev-network: